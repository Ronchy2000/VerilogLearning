/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("R")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("R[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

SIGNAL("R[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "R";
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 15000.0;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 15000.0;
			LEVEL 0 FOR 15000.0;
			LEVEL 1 FOR 5000.0;
		}
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 20000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 15000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 30000.0;
			LEVEL 0 FOR 15000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
		}
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 15000.0;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 20000.0;
		}
	}
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 15000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 30000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
		}
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 15000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 15000.0;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 25000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 15000.0;
			LEVEL 0 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 20000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 25000.0;
			LEVEL 1 FOR 5000.0;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 5000.0;
		}
	}
}

TRANSITION_LIST("R[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.113;
			LEVEL 0 FOR 10005.009;
			LEVEL 1 FOR 3.03;
			LEVEL 0 FOR 44993.898;
			LEVEL 1 FOR 5000.1;
			LEVEL 0 FOR 39992.85;
		}
	}
}

TRANSITION_LIST("R[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.65;
			LEVEL 0 FOR 9999.505;
			LEVEL 1 FOR 5000.008;
			LEVEL 0 FOR 5004.728;
			LEVEL 1 FOR 4994.341;
			LEVEL 0 FOR 20006.064;
			LEVEL 1 FOR 9994.762;
			LEVEL 0 FOR 5000.202;
			LEVEL 1 FOR 4999.798;
			LEVEL 0 FOR 3.382;
			LEVEL 1 FOR 9995.792;
			LEVEL 0 FOR 20000.923;
			LEVEL 1 FOR 4992.845;
		}
	}
}

TRANSITION_LIST("R[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.498;
			LEVEL 0 FOR 10005.392;
			LEVEL 1 FOR 4995.985;
			LEVEL 0 FOR 5002.321;
			LEVEL 1 FOR 4994.394;
			LEVEL 0 FOR 5002.647;
			LEVEL 1 FOR 9997.353;
			LEVEL 0 FOR 30003.446;
			LEVEL 1 FOR 9997.868;
			LEVEL 0 FOR 4998.746;
			LEVEL 1 FOR 7.366;
			LEVEL 0 FOR 9992.634;
			LEVEL 1 FOR 4993.35;
		}
	}
}

TRANSITION_LIST("R[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.093;
			LEVEL 0 FOR 10001.415;
			LEVEL 1 FOR 4999.087;
			LEVEL 0 FOR 5001.177;
			LEVEL 1 FOR 4995.127;
			LEVEL 0 FOR 10000.005;
			LEVEL 1 FOR 3.691;
			LEVEL 0 FOR 9996.309;
			LEVEL 1 FOR 15002.188;
			LEVEL 0 FOR 5000.002;
			LEVEL 1 FOR 5001.501;
			LEVEL 0 FOR 5000.225;
			LEVEL 1 FOR 9999.538;
			LEVEL 0 FOR 3.41;
			LEVEL 1 FOR 4993.131;
			LEVEL 0 FOR 5003.549;
			LEVEL 1 FOR 4990.552;
		}
	}
}

TRANSITION_LIST("R[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.471;
			LEVEL 0 FOR 9996.831;
			LEVEL 1 FOR 5004.723;
			LEVEL 0 FOR 4999.134;
			LEVEL 1 FOR 4996.113;
			LEVEL 0 FOR 5005.054;
			LEVEL 1 FOR 9994.946;
			LEVEL 0 FOR 40005.263;
			LEVEL 1 FOR 9998.773;
			LEVEL 0 FOR 9989.692;
		}
	}
}

TRANSITION_LIST("R[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.783;
			LEVEL 0 FOR 5000.821;
			LEVEL 1 FOR 4999.515;
			LEVEL 0 FOR 30000.485;
			LEVEL 1 FOR 24999.991;
			LEVEL 0 FOR 10001.342;
			LEVEL 1 FOR 5000.086;
			LEVEL 0 FOR 5000.339;
			LEVEL 1 FOR 4998.46;
			LEVEL 0 FOR 9990.178;
		}
	}
}

TRANSITION_LIST("R[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.646;
			LEVEL 0 FOR 5001.272;
			LEVEL 1 FOR 4999.54;
			LEVEL 0 FOR 45000.46;
			LEVEL 1 FOR 9999.54;
			LEVEL 0 FOR 10000.46;
			LEVEL 1 FOR 5000.017;
			LEVEL 0 FOR 19990.065;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "R";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "R[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "R[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "R[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "R[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "R[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "R[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "R[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
